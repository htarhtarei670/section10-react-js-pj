{"ast":null,"code":"const AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogOut: () => {}\n});\n\n//to bulid custom component on context file\n// export const AuthContextProvider=(props)=>{\n//     const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//       useEffect(()=>{\n//         const getLocalStorageLoggedIn=localStorage.getItem(\"isLoggedIn\");\n\n//         if (getLocalStorageLoggedIn === \"1\") {\n//          setIsLoggedIn(true);\n//         } \n//       },[])\n\n//       const loginHandler = () => {\n//         // We should of course check email and password\n//         // But it's just a dummy/ demo anyways\n//         setIsLoggedIn(true);\n//         localStorage.setItem(\"isLoggedIn\",\"1\");\n//       };\n\n//       const logoutHandler = () => {\n//         setIsLoggedIn(false);\n//         localStorage.removeItem(\"isLoggedIn\");\n//       };\n\n//     return(\n//     <AuthContextProvider value={{ isLoggedIn:isLoggedIn ,onLogOut:logoutHandler,onLogIn:loginHandler }} >\n//         {props.children}\n//     </AuthContextProvider>)\n// }\n\nexport default AuthContext;","map":{"version":3,"names":["AuthContext","React","createContext","isLoggedIn","onLogOut"],"sources":["C:/Users/Huawei/Desktop/09_section/src/store/auth-context.js"],"sourcesContent":["\r\nconst AuthContext=React.createContext(\r\n  {\r\n      isLoggedIn: false,\r\n       onLogOut: () => {},\r\n  }\r\n)\r\n\r\n\r\n//to bulid custom component on context file\r\n// export const AuthContextProvider=(props)=>{\r\n//     const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n//       useEffect(()=>{\r\n//         const getLocalStorageLoggedIn=localStorage.getItem(\"isLoggedIn\");\r\n\r\n//         if (getLocalStorageLoggedIn === \"1\") {\r\n//          setIsLoggedIn(true);\r\n//         } \r\n//       },[])\r\n\r\n\r\n//       const loginHandler = () => {\r\n//         // We should of course check email and password\r\n//         // But it's just a dummy/ demo anyways\r\n//         setIsLoggedIn(true);\r\n//         localStorage.setItem(\"isLoggedIn\",\"1\");\r\n//       };\r\n\r\n//       const logoutHandler = () => {\r\n//         setIsLoggedIn(false);\r\n//         localStorage.removeItem(\"isLoggedIn\");\r\n//       };\r\n\r\n\r\n//     return(\r\n//     <AuthContextProvider value={{ isLoggedIn:isLoggedIn ,onLogOut:logoutHandler,onLogIn:loginHandler }} >\r\n//         {props.children}\r\n//     </AuthContextProvider>)\r\n// }\r\n\r\n\r\nexport default AuthContext;"],"mappings":"AACA,MAAMA,WAAW,GAACC,KAAK,CAACC,aAAa,CACnC;EACIC,UAAU,EAAE,KAAK;EAChBC,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACtB,CACF,CAAC;;AAGD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA,eAAeJ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}